-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_dft is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 8;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_ctrl_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_WVALID : IN STD_LOGIC;
    s_axi_ctrl_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_RREADY : IN STD_LOGIC;
    s_axi_ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_BREADY : IN STD_LOGIC;
    s_axi_ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    input_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    output_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_r_TVALID : IN STD_LOGIC;
    input_r_TREADY : OUT STD_LOGIC;
    output_r_TVALID : OUT STD_LOGIC;
    output_r_TREADY : IN STD_LOGIC );
end;


architecture behav of hls_dft is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hls_dft,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7vx485tffg1761-2,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.387500,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=2,HLS_SYN_DSP=67,HLS_SYN_FF=6683,HLS_SYN_LUT=12643}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_true : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal fharmonics_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_harmonics_V : STD_LOGIC_VECTOR (7 downto 0);
    signal decimation_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_dft_Block_preheader69_preheader30_U0_ap_start : STD_LOGIC;
    signal hls_dft_Block_preheader69_preheader30_U0_ap_done : STD_LOGIC;
    signal hls_dft_Block_preheader69_preheader30_U0_ap_continue : STD_LOGIC;
    signal hls_dft_Block_preheader69_preheader30_U0_ap_idle : STD_LOGIC;
    signal hls_dft_Block_preheader69_preheader30_U0_ap_ready : STD_LOGIC;
    signal hls_dft_Block_preheader69_preheader30_U0_input_r_TREADY : STD_LOGIC;
    signal hls_dft_Block_preheader69_preheader30_U0_fharmonics_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hls_dft_Block_preheader69_preheader30_U0_fharmonics_ce0 : STD_LOGIC;
    signal hls_dft_Block_preheader69_preheader30_U0_output_r_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal hls_dft_Block_preheader69_preheader30_U0_output_r_TVALID : STD_LOGIC;
    signal hls_dft_Block_preheader69_preheader30_U0_output_r_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_hs_continue : STD_LOGIC;
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_sig_hs_ready : STD_LOGIC;

    component hls_dft_Block_preheader69_preheader30 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        num_harmonics_V : IN STD_LOGIC_VECTOR (7 downto 0);
        input_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_TVALID : IN STD_LOGIC;
        input_r_TREADY : OUT STD_LOGIC;
        input_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        fharmonics_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        fharmonics_ce0 : OUT STD_LOGIC;
        fharmonics_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_r_TVALID : OUT STD_LOGIC;
        output_r_TREADY : IN STD_LOGIC;
        output_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        decimation_V : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component hls_dft_ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        fharmonics_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        fharmonics_ce0 : IN STD_LOGIC;
        fharmonics_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_harmonics_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        decimation_V : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    hls_dft_ctrl_s_axi_U : component hls_dft_ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_AWVALID,
        AWREADY => s_axi_ctrl_AWREADY,
        AWADDR => s_axi_ctrl_AWADDR,
        WVALID => s_axi_ctrl_WVALID,
        WREADY => s_axi_ctrl_WREADY,
        WDATA => s_axi_ctrl_WDATA,
        WSTRB => s_axi_ctrl_WSTRB,
        ARVALID => s_axi_ctrl_ARVALID,
        ARREADY => s_axi_ctrl_ARREADY,
        ARADDR => s_axi_ctrl_ARADDR,
        RVALID => s_axi_ctrl_RVALID,
        RREADY => s_axi_ctrl_RREADY,
        RDATA => s_axi_ctrl_RDATA,
        RRESP => s_axi_ctrl_RRESP,
        BVALID => s_axi_ctrl_BVALID,
        BREADY => s_axi_ctrl_BREADY,
        BRESP => s_axi_ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        fharmonics_address0 => hls_dft_Block_preheader69_preheader30_U0_fharmonics_address0,
        fharmonics_ce0 => hls_dft_Block_preheader69_preheader30_U0_fharmonics_ce0,
        fharmonics_q0 => fharmonics_q0,
        num_harmonics_V => num_harmonics_V,
        decimation_V => decimation_V);

    hls_dft_Block_preheader69_preheader30_U0 : component hls_dft_Block_preheader69_preheader30
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => hls_dft_Block_preheader69_preheader30_U0_ap_start,
        ap_done => hls_dft_Block_preheader69_preheader30_U0_ap_done,
        ap_continue => hls_dft_Block_preheader69_preheader30_U0_ap_continue,
        ap_idle => hls_dft_Block_preheader69_preheader30_U0_ap_idle,
        ap_ready => hls_dft_Block_preheader69_preheader30_U0_ap_ready,
        num_harmonics_V => num_harmonics_V,
        input_r_TDATA => input_r_TDATA,
        input_r_TVALID => input_r_TVALID,
        input_r_TREADY => hls_dft_Block_preheader69_preheader30_U0_input_r_TREADY,
        input_r_TLAST => input_r_TLAST,
        fharmonics_address0 => hls_dft_Block_preheader69_preheader30_U0_fharmonics_address0,
        fharmonics_ce0 => hls_dft_Block_preheader69_preheader30_U0_fharmonics_ce0,
        fharmonics_q0 => fharmonics_q0,
        output_r_TDATA => hls_dft_Block_preheader69_preheader30_U0_output_r_TDATA,
        output_r_TVALID => hls_dft_Block_preheader69_preheader30_U0_output_r_TVALID,
        output_r_TREADY => output_r_TREADY,
        output_r_TLAST => hls_dft_Block_preheader69_preheader30_U0_output_r_TLAST,
        decimation_V => decimation_V);




    ap_done <= ap_sig_hs_done;

    ap_idle_assign_proc : process(hls_dft_Block_preheader69_preheader30_U0_ap_idle)
    begin
        if ((ap_const_logic_1 = hls_dft_Block_preheader69_preheader30_U0_ap_idle)) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= hls_dft_Block_preheader69_preheader30_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sig_hs_continue <= ap_const_logic_1;

    ap_sig_hs_done_assign_proc : process(hls_dft_Block_preheader69_preheader30_U0_ap_done)
    begin
        if ((ap_const_logic_1 = hls_dft_Block_preheader69_preheader30_U0_ap_done)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_sig_hs_ready <= hls_dft_Block_preheader69_preheader30_U0_ap_ready;
    hls_dft_Block_preheader69_preheader30_U0_ap_continue <= ap_const_logic_1;
    hls_dft_Block_preheader69_preheader30_U0_ap_start <= ap_start;
    input_r_TREADY <= hls_dft_Block_preheader69_preheader30_U0_input_r_TREADY;
    output_r_TDATA <= hls_dft_Block_preheader69_preheader30_U0_output_r_TDATA;
    output_r_TLAST <= hls_dft_Block_preheader69_preheader30_U0_output_r_TLAST;
    output_r_TVALID <= hls_dft_Block_preheader69_preheader30_U0_output_r_TVALID;
end behav;
